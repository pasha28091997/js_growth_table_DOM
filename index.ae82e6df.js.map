{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,eACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAExC,EAAW,EAAM,IAAI,CAAC,MAAM,CAC5B,EAAW,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAEzC,SAAS,IACP,EAAa,QAAQ,CAAG,GAAY,GACpC,EAAa,QAAQ,CAAG,GAAY,EACpC,EAAa,QAAQ,CAAG,GAAY,GACpC,EAAa,QAAQ,CAAG,GAAY,CACtC,CAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,GAAI,EAAW,GAAI,CAGjB,IAAK,IAFC,EAAS,EAAM,SAAS,GAErB,EAAI,EAAG,EAAI,EAAU,IAC5B,EAAO,UAAU,EAEnB,CAAA,IACA,GACF,CACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACjC,EAAW,IACb,EAAM,SAAS,CAAC,IAChB,IACA,IAEJ,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,GAAI,EAAW,GAAI,CACZ,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,E,C,M,E,CADX,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,IACA,GACF,CACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,GAAI,EAAW,EAAG,CACX,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAa,EAAM,IAAI,CAAA,OAAA,QAAA,CAAA,GAAvB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,UAAU,CAAC,G,C,M,E,CADZ,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAGL,IACA,GACF,CACF,GAEA","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\".field\");\nvar appendRowBtn = document.querySelector(\".append-row\");\nvar removeRowBtn = document.querySelector(\".remove-row\");\nvar appendColBtn = document.querySelector(\".append-column\");\nvar removeColBtn = document.querySelector(\".remove-column\");\nvar rowCount = table.rows.length;\nvar colCount = table.rows[0].cells.length;\nfunction updateButtons() {\n    appendRowBtn.disabled = rowCount >= 10;\n    removeRowBtn.disabled = rowCount <= 2;\n    appendColBtn.disabled = colCount >= 10;\n    removeColBtn.disabled = colCount <= 2;\n}\nappendRowBtn.addEventListener(\"click\", function() {\n    if (rowCount < 10) {\n        var newRow = table.insertRow();\n        for(var i = 0; i < colCount; i++)newRow.insertCell();\n        rowCount++;\n        updateButtons();\n    }\n});\nremoveRowBtn.addEventListener(\"click\", function() {\n    if (rowCount > 2) {\n        table.deleteRow(-1);\n        rowCount--;\n        updateButtons();\n    }\n});\nappendColBtn.addEventListener(\"click\", function() {\n    if (colCount < 10) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.insertCell();\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        colCount++;\n        updateButtons();\n    }\n});\nremoveColBtn.addEventListener(\"click\", function() {\n    if (colCount > 2) {\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            for(var _iterator = table.rows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                var row = _step.value;\n                row.deleteCell(-1);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        colCount--;\n        updateButtons();\n    }\n});\nupdateButtons();\n\n//# sourceMappingURL=index.ae82e6df.js.map\n","'use strict';\n\nconst table = document.querySelector('.field');\nconst appendRowBtn = document.querySelector('.append-row');\nconst removeRowBtn = document.querySelector('.remove-row');\nconst appendColBtn = document.querySelector('.append-column');\nconst removeColBtn = document.querySelector('.remove-column');\n\nlet rowCount = table.rows.length;\nlet colCount = table.rows[0].cells.length;\n\nfunction updateButtons() {\n  appendRowBtn.disabled = rowCount >= 10;\n  removeRowBtn.disabled = rowCount <= 2;\n  appendColBtn.disabled = colCount >= 10;\n  removeColBtn.disabled = colCount <= 2;\n}\n\nappendRowBtn.addEventListener('click', () => {\n  if (rowCount < 10) {\n    const newRow = table.insertRow();\n\n    for (let i = 0; i < colCount; i++) {\n      newRow.insertCell();\n    }\n    rowCount++;\n    updateButtons();\n  }\n});\n\nremoveRowBtn.addEventListener('click', () => {\n  if (rowCount > 2) {\n    table.deleteRow(-1);\n    rowCount--;\n    updateButtons();\n  }\n});\n\nappendColBtn.addEventListener('click', () => {\n  if (colCount < 10) {\n    for (const row of table.rows) {\n      row.insertCell();\n    }\n    colCount++;\n    updateButtons();\n  }\n});\n\nremoveColBtn.addEventListener('click', () => {\n  if (colCount > 2) {\n    for (const row of table.rows) {\n      row.deleteCell(-1);\n    }\n    colCount--;\n    updateButtons();\n  }\n});\n\nupdateButtons();\n"],"names":["table","document","querySelector","appendRowBtn","removeRowBtn","appendColBtn","removeColBtn","rowCount","rows","length","colCount","cells","updateButtons","disabled","addEventListener","newRow","insertRow","i","insertCell","deleteRow","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","row","value","err","return","deleteCell"],"version":3,"file":"index.ae82e6df.js.map"}